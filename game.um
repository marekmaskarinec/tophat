// vim: filetype=umka

import (
	"umka/rawdraw.um"
	"umka/polygon.um"
	"umka/entity.um"
	"umka/rectangle.um"
	"umka/tophat.um"
	"umka/input.um"
	"umka/image.um"
	"umka/raycast.um"
	"umka/misc.um"
	"umka/audio.um"
	"umka/std/std.um"
)

fn main() { 

	cam := rectangle.mk(10, 10, 80, 80)
	tophat.setup("test game", cam.x * 100, cam.y * 100)

	s := []^entity.ent{}

	p := polygon.mk(10, 10, []int32{0, 0, 0, 10, 10, 10, 10, 0})

	player := entity.mk(p, 0xff00ffff, 20)
	img := image.load("test.bmp")
	player.image = img
	player.setscale(0.2, 0.2)
	//player.setrot(10)

	objp := polygon.mk(0, 0, []int32{0, 0, 0, 20, 20, 20, 20, 0})

	obj := entity.mk(objp, 0x0000ebff, 10)
	obj.setrot(90)
	obj.setscale(1, 1)

	s = append(s, []^entity.ent{&player, &obj})

	ray := raycast.mk(10, 10, 20, 0)

	var w, h: int32

	var mx, my: int32

	var coll: int32

	var start: int

	var color: uint32

	rotspeed := 0.2

	so := audio.load("test.wav")
	audio.setsounds([]audio.sound{so})
	so.looping(true)

	for true {
		tophat.cycle(&w, &h, 0xffffffff, cam)

		if input.isjustpressed(input.KEY_W) {
			so.play()
			img.flipv()
		}

		if input.isjustpressed(input.KEY_S) {
			so.stop()
			img.fliph()
		}

		if input.isjustpressed(input.KEY_ESCAPE) {
			return
		}

		if input.ispressed(input.KEY_Q) {
			ray.r -= round(rotspeed * tophat.delta)
		}

		if input.ispressed(input.KEY_E) {
			ray.r += round(rotspeed * tophat.delta)
		}

		ray.x, ray.y = input.getglobalmousepos(cam)

		rx, ry := misc.rotatepoint(ray.x, ray.y - ray.l, ray.x, ray.y, ray.r)
		rawdraw.drawline(ray.x-cam.x, ray.y-cam.y, rx-cam.x, ry-cam.y, 1, color)

		//player.draw(cam)
		obj.draw(cam)
		coll = ray.getcoll(s)
		if coll > 0 {
			color = 0xffff00ff
		} else {
			color = 0xff00ffff
		}
		//rawdraw.setcolor(0x262626eb)
		//rawdraw.drawrect(20 - cam.x, 20 - cam.y, 40, 40)
		rawdraw.drawtext(std.itoa(ray.x) + ", " + std.itoa(ray.y), 10, 10, 0x000000ff, 1)
	}
	img.delete()
	so.del()
}

fn windowdestroy() {
	printf("destroying window\n")
}
