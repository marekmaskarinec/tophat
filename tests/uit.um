
import (
	"th.um"
	"rect.um"
	"signal.um"
	"window.um"
	"ui.um"
	"font.um"
)

var gui, win: ui.Gui
var tb: ui.TextBox

fn init*() {
	window.setup("gui test", 600, 600)
	window.setViewport(th.Vf2{ 200, 200 })

	ft := font.load("etc/roboto.ttf", 64)

	gui = ui.mk(rect.mk(0, 0, 200, 200), ui.getDefaultStyle())

	win = ui.mk(rect.mk(100, 100, 80, 50), ui.getDefaultStyle())

	window.onFrame.register(signal.Callback{
		layout := ui.LayoutFn{
			gui.box(ui.BoxConfig{
				dimension: 30,
				growType: ui.BoxGrowDimension,
				dir: ui.BoxDirectionUp })
			{
				gui.box(ui.BoxConfig{
					subdivisions: 3,
					growType: ui.BoxGrowSubdivision,
					dir: ui.BoxDirectionRight })
				{
					for i := 0; i < 3; i++ {
						if gui.qbutton(sprintf("Button %d", i+1)) {
							printf("click %d\n", i+1)
						}
					}
				}
				gui.popContainer()

				gui.pushRect(rect.mk(0, 0, 0, 2))
				gui.label("I'm just a label", ui.LabelConfig{
					centerX: true })
				gui.pushRect(rect.mk(0, 0, 0, 2))

				if gui.qbutton("Next row button.") {
					printf("click next row button\n")
				}

				gui.textBox(&tb)
			}
			gui.popContainer()
		}

		layout2 := ui.LayoutFn{
			gui.box(ui.BoxConfig{
				subdivisions: 2,
				growType: ui.BoxGrowSubdivision,
				dir: ui.BoxDirectionDown })
			{
				gui.label("I'm a window\n", ui.LabelConfig{
					centerX: true, centerY: true })
				if gui.qbutton("Click me!") {
					printf("Clicked button in window\n")
				}
			}
			gui.popContainer()
		}

		win.eval(layout2)
		gui.eval(layout)
		gui.draw(layout)
		win.draw(layout2)
	}, null)
}
