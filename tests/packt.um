
import (
	"th.um"
	"canvas.um"
	"window.um"
	"atlas.um"
	"image.um"
)

fn drawAtlas(a: atlas.Atlas, p: th.Vf2): th.Vf2 {
	a.i.draw({ p: p, s: { 1, 1 } })
	idm := a.i.getDims()

	for i:=1; i < a.dm.x; i++ {
		canvas.drawLine(th.yellow,
			{ p.x + i*a.cs.x, p.y },
			{ p.x + i*a.cs.x, p.y + idm.y },
			2
		)
	}

	for i:=1; i < a.dm.y; i++ {
		canvas.drawLine(th.yellow,
			{ p.x, p.y + i*a.cs.y },
			{ p.x + idm.x, p.y + i*a.cs.y },
			2
		)
	}

	return { p.x, p.y + idm.y + 20 }
}

fn init*() {
	window.setup("Pack test", 400, 400)

	logos := []image.Image{
		image.load("etc/logo/logo-hatonly-white.png"),
		image.load("etc/logo/logo-hatonly.png"),
		image.load("etc/logo/logo-normal-white.png"),
		image.load("etc/logo/logo-normal.png"),
		image.load("etc/logo/logo-notext-white.png"),
		image.load("etc/logo/logo-notext.png")
	}

	square := atlas.pack(logos, atlas.PackSquare)
	row := atlas.pack(logos, atlas.PackRow)
	column := atlas.pack(logos, atlas.PackColumn)

	window.onFrame.register(|square, row, column| {
		p := th.Vf2{ 1, 1 }
		p = drawAtlas(square, p)
		p = drawAtlas(row, p)
		p = drawAtlas(column, p)
	})
}
