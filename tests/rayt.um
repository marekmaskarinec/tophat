
import (
	"th.um"
	"ent.um"
	"ray.um"
	"rect.um"
	"image.um"
	"input.um"
	"canvas.um"
	"window.um"
	"signal.um"
)

var (
	r: ray.Ray
	e : ent.Ent
	cam: rect.Rect
)

fn init*() {
	window.setup("raycast test", 400, 400)

	r = ray.mk(th.Vf2{}, 60, 0)
	e = ent.mk(image.load("etc/test.png"), {p: { 100, 100 }, s: { 4, 4 }})

	window.onFrame.register(signal.Callback{
		r.pos = input.getGlobalMousePos()

		if input.isPressed(input.Key.mouse1) {
			r.r -= 0.1 * th.delta
		}

		if input.isPressed(input.Key.mouse3) {
			r.r += 0.1 * th.delta
		}

		if colls := r.getColl([]^ent.Ent{&e}, 1); len(colls) != 0 {
			p := colls[0].pos
			canvas.drawRect(th.red, rect.mk(p.x, p.y, 3, 3))
			e.c = 0xffffff88
		} else {
			e.c = th.white
		}

		r.draw(th.green, 2)
		e.draw()
	})
}
