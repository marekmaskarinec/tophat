
type poly* = struct {
    x: int32
    y: int32
    v: []int32
    w: int32
    h: int32
    vc: int32
}

type cpoly* = struct {
	x: int32
	y: int32
	v: ^int32
	w: int32
	h: int32
	vc: int32
}

fn mk*(x, y: int32, v: []int32): poly {
	var p: poly

	p.vc = int32(len(v)/2)
	p.v = v
	p.x = x
	p.y = y

	var maxx, maxy: int32;

	for i:=0; i < len(v); i += 2 {
		if v[i] > maxx { maxx = v[i] }
		
		if v[i + 1] > maxy { maxy = v[i + 1] }
	}

	p.w = maxx
	p.h = maxy

	return p
}
