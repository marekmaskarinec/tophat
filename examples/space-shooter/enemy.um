
import (
	"th.um"
	"ent.um"
	"std.um"
	"image.um"
	"sound.um"
	"global.um"
	"effects.um"
)

type Enemy* = struct {
	motion: th.iu
	ent: ent.Ent
}

const (
	speed = th.Vf2{0.015, 0.04}
	maxEnemies = 4
)

var (
	enemies*: []Enemy
	prefab: ent.Ent
)

fn init*() {
	enemies = []Enemy{}

	prefab = ent.mk(
		image.load("gfx/enemy.png"),
		th.Transform{p: th.Vf2{y: -global.cam.h - 20}, s: th.Vf2{1, 1}})
}

fn spawn*() {
	e := prefab
	e.t.p.x = std.rand()%round(global.cam.w - e.r.w * 2) - global.cam.w/2 + e.r.w
	e.t.p.y -= std.rand()%round(global.cam.h/6)

	m := std.rand()%2
	if m == 0 {
		m = -1
	}
	enemies = append(enemies, Enemy{m, e})
}

fn getEnts*(): []^ent.Ent {
	e := make([]^ent.Ent, len(enemies))
	for i:=0; i < len(enemies); i++ {
		e[i] = &enemies[i].ent
	}

	return e
}

fn handle*() {
	for len(enemies) < maxEnemies {
		spawn()
	}

	for i:=0; i >= 0 && i < len(enemies) && len(enemies) != 0; i++ {
		e := &enemies[i]

		e.ent.t.p.y += speed.y * th.delta
		if e.ent.t.p.y > global.cam.h/2 {
			enemies = delete(enemies, i)
			i--
			effects.damage()
			global.hp--
			sound.dmg.start()

			if global.hp == 0 {
				if global.score > global.hi {
					global.hi = global.score
					f := std.fopen("score", "w")
					fprintf(f, "%d", global.hi)
					std.fclose(f)
				}

				enemies = []Enemy{}
				global.hp = 10
				global.scene = global.MENU
			}

			continue
		}

		e.ent.t.p.x += speed.x * th.delta * e.motion
		if e.ent.t.p.x < -global.cam.w/2 ||
			e.ent.t.p.x > global.cam.w/2 - e.ent.r.w {
			e.motion *= -1
			// prevent enemies from getting stuck in a loop
			e.ent.t.p.x += e.motion
		}
	}
}

fn draw*() {
	for i:=0; i < len(enemies); i++ {
		enemies[i].ent.draw(global.cam)
	}
}
