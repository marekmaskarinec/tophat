
//~~fn parse
// Parses input into a 2d string array.
fn parse*(inp: str, sep: char = ','): [][]str {
//~~
	length := len(inp)
	outLen := 0
	out := [][]str{}
	row := []str{}
	start := 0

	for i := 0; i < length; i++ {
		if inp[i] == '\n' {
			row = append(row, slice(inp, start, i))

			if outLen % 64 == 0 {
				var more: [64][]str
				out = append(out, more)
			}

			out[outLen] = row
			outLen++

			row = []str{}
			start = i+1
		} else if inp[i] == sep {
			row = append(row, slice(inp, start, i))
			start = i+1
		}
	}

	return slice(out, 0, outLen)
}

//~~fn encode
// Converts 2d array to csv string.
fn encode*(inp: [][]str, sep: char = ','): str {
//~~
	strLen := 1
	for i in inp {
		for j in inp[i] {
			strLen += len(inp[i][j])
			strLen += 1 // Comma, Newline
		}
	}

	out := make([]char, strLen)
	outI := 0

	for i:=0; i < len(inp); i++ {
		for j:=0; j < len(inp[i]); j++ {
			for _, c in inp[i][j] {
				out[outI] = c
				outI++
			}
			if j < len(inp[i])-1 { out[outI] = sep; outI++ }
		}
		out[outI] = '\n'
		outI += 1
	}
	return out
}

