
import (
	"rawdraw.um"
)

type img* = struct {
	handle: int
}

fn loadimg(path: ^char): int

fn deleteimg(i: int)

fn iconset(i: int)

fn flipvimg(i: int)

fn fliphimg(i: int)

fn imgvalid(i: int): int32

fn load*(path: str): img {
	return img{loadimg(&path[0])}
}

fn (i: ^img) delete*() {
	deleteimg(i.handle)
}

fn (i: ^img) setasicon*() {
	iconset(i.handle)
}

fn (i: ^img) flipv*() {
	flipvimg(i.handle)
}

fn (i: ^img) fliph*() {
	fliphimg(i.handle)
}

fn (i: ^img) draw*(x, y, rot: int32, scale: real)  {
	rawdraw.cdrawimage(i.handle, rot, scale, x, y)
}

fn (i: ^img) validate*(): bool {
	return bool(imgvalid(i.handle))
}
