
import (
	"rawdraw.um"
	"rectangle.um"
	"input.um"
	"std/std.um"
)

var start, end, delta*: real

fn sleep*(t: int)

fn setup*(title: str) {
	rawdraw.setup(title, 500, 500)
	rawdraw.setbgcolor(0x000000ff)
	rawdraw.clearframe()

	start = std.clock()
}

fn debug*()
fn debug2*()

fn visualizecam(w, h: int32, color: uint32)

fn updatescaling(w, h, camw, camh: int32)

fn cycle*(w, h: ^int32, bgcolor: uint32, cam: rectangle.rect) {
	rawdraw.swapbuffers()

	end = std.clock()
	delta = end - start
	start = std.clock()

	rawdraw.setbgcolor(0x000000ff)
	rawdraw.clearframe()
	rawdraw.handleinput()
	rawdraw.getdimensions(w, h)
	var ws, hs: int32
	rawdraw.getdimensions(&ws, &hs)

	updatescaling(ws, hs, cam.w, cam.h)

	visualizecam(cam.w, cam.h, bgcolor)
}

