// vim: filetype=umka

import (
	"rawdraw.um"
	"rectangle.um"
	"input.um"
	"audio.um"
	"std/std.um"
)

var start, end, delta*: int

var platform*: str = "linux"

fn sleep*(t: int)

fn gettime*(): int

fn setup*(title: str, w, h: int32) {
	rawdraw.setup(title, w, h)
	rawdraw.setbgcolor(0x000000ff)
	rawdraw.clearframe()

	if std.getenv("HOME") == "" {
		input.setwinmap()
		platform = "windows"
	}

	audio.sarr = []audio.sound{}

	start = gettime()
}

fn setwindowtitle*(title: str)

fn debug*()
fn debug2*()

fn visualizecam(w, h: int32, color: uint32)

fn updatescaling(w, h, camw, camh: int32)

fn cycle*(w, h: ^int32, bgcolor: uint32, cam: rectangle.rect) {
	rawdraw.setcolor(0x000000ff)
	rawdraw.drawrect(0, cam.h, w^, h^)
	rawdraw.drawrect(cam.w, 0, w^, h^)
	rawdraw.swapbuffers()

	end = gettime()
	delta = (end - start)/1000
	if delta < 0 {
		delta += 1000
	}
	start = gettime()

	rawdraw.setbgcolor(0x000000ff)
	rawdraw.clearframe()
	rawdraw.handleinput()
	rawdraw.getdimensions(w, h)
	var ws, hs: int32
	rawdraw.getdimensions(&ws, &hs)

	updatescaling(ws, hs, cam.w, cam.h)

	visualizecam(cam.w, cam.h, bgcolor)
}

fn setvsync*(v: bool)

