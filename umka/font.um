// Package for font drawing.

import (
	"th.um"
	"std/map.um"
	"std/utf8.um"
	"image.um"
)

// Font type. It is a pointer to c.
type Font* = struct {
	index: th.uu
}

fn ctexttoimg(
	t: th.uu, text: ^utf8.Rune,
	runec: th.uu, size: th.fu, color: uint32, spacing: th.Vf2): uint

// Creates an image.img from a text. ax and ay are character/line spacings.
fn (t: ^Font) strToImage*(text: str, size: th.fu, color: uint32, spacing: th.Vf2): image.Image {
	runes := utf8.decode(text)
	return image.Image{ctexttoimg(t.index, &runes[0], len(runes), size, color, spacing)}
}

fn cfontload(path: str): th.uu

// Loads a font from file.
fn load*(path: str): Font {
	return Font{cfontload(path)}
}
