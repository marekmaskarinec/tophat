import (
	"std/std.um"
	"polygon.um"
)

fn drawtext*(text: str, x: int32, y: int32, color: uint32, size: real)

fn textsize*(text: str, scale: real): (int, int) {
	var w, maxw, h: int
	w = 0
	maxw = 0
	h = 1

	for s in text {
		if s == "\n" {
			h += 1
			if w > maxw {
				maxw = w
			}

			continue
		}

		w++
	}

	if w > maxw {
		maxw = w
	}

	return round(maxw * scale * 3 - scale), round(h * 6 * scale)
}

fn setup*(title: str, w, h: int)

fn setbgcolor*(color: int)

fn setcolor*(color: int)

fn clearframe*()

fn getdimensions*(w, h: ^int32)

fn swapbuffers*()

fn handleinput*()

fn drawsegment*(x1, y1, x2, y2: int32)

fn drawrect*(x1, y1, x2, y2: int32)

fn drawline*(x1, y1, x2, y2, s: int32, color: uint32) {
	setcolor(color)
	drawsegment(x1, y1, x2, y2)
}

fn cdrawimage*(img: int, rot: int32, scale: real, x, y: int32)
