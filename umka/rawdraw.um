// Raw canvas library named after cnlohr's rawdraw library, the library
// tophat uses.

import (
	"th.um"
	"std/std.um"
	"polygon.um"
	"rectangle.um"
)

// Draws text. Fonts are comming eventually.
fn drawtext*(text: str, pos: th.vf2, color: uint32, size: th.fu)

// Precomputes a text dimensions.
fn textsize*(text: str, scale: th.fu): th.vf2 {
	var w, maxw, h: int
	w = 0
	maxw = 0
	h = 1

	for s in text {
		if s == "\n" {
			h += 1
			if w > maxw {
				maxw = w
			}

			continue
		}

		w++
	}

	if w > maxw {
		maxw = w
	}

	return th.vf2{maxw * scale * 3 - scale, h * 6 * scale}
}

// Sets up a window (use tophat's functions instead).
fn setup*(title: str, w, h: int)

// Sets bg color of the window (already in tophat.cycle)
fn setbgcolor*(color: int)

// Clears the screen (already in tophat.cycle)
fn clearframe*()

// Sets drawing color.
fn setcolor*(color: int)

// Returns raw window dimension (already in tophat.cycle)
fn getdimensions*(w, h: ^int32)

// Finishes the cycle (already in tophat.cycle)
fn swapbuffers*()

// Handles input (already in tophat.cycle)
fn handleinput*()

fn drawsegment(b, e: th.vf2, thickness: th.fu)

// Draws a rectangle.
fn drawrect*(r: rectangle.rect)

// Draws a line.
fn drawline*(b, e: th.vf2, thickness: th.fu, color: uint32) {
	setcolor(color)
	drawsegment(b, e, thickness)
}

// Internal.
fn cdrawimage*(img: int, rot: th.fu, scale: th.vf2, pos: th.vf2)
