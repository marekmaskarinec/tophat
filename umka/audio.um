// Module for audio loading and playback.

import (
	"th.um"
)

// A structure used to create playbacks.
type Sound* = struct {
	looping: bool
	volume: th.fu
	path: str
}

// Playback is a currently played instance of a sound.
// The properties are set to the value the sound has.
// sound.play returns a pointer. Be sure to keep it if you want to
// change the sound while its playing.
type Playback* = struct{
	decoder: ^struct{}
	// Indicates if the sound is playing.
	playing: bool
	// If set to true, playback will be paused.
	paused: bool
	// If true, playback will keep on playing again after it ends.
	looping: bool
	// Multiplier of the volume.
	volume: th.fu
	// Sets the current PCM frame. Write only.
	frame: int
}

fn csoundplay(s: ^Sound): ^Playback

// Loads sound at a path.
fn load*(path: str): Sound {
	return Sound{
		looping: false,
		volume: 1,
		path: path }
}

// Plays the sound.
fn (s: ^Sound) play*(): ^Playback {
	return csoundplay(s)
}
