import (
	"umka/rawdraw.um"
	"umka/vec.um"
	"umka/tophat.um"
	"umka/input.um"
	"umka/rectangle.um"
	"umka/entity.um"
	"umka/raycast.um"
	"umka/polygon.um"
	"umka/ui.um"
	"umka/image.um"
	"umka/csv.um"
	"umka/tilemap.um"
	"umka/tween.um"
	"umka/light.um"
	"umka/particles.um"
	"umka/lerp.um"
	"umka/font.um"
	"umka/misc.um"

	"umka/std/std.um"
)

fn main() { 
	cam := rectangle.mk(20, 20, 250, 250)
	tophat.setup("test game", 100, 100)
	var w, h: int32
	t := 0

	tm := tilemap.mk(
		misc.readall("etc/tilemap-test.csv"),
		[]image.img{image.load("etc/test.png")})

	tm.x = 20

	r := raycast.mk(0, 0, 20, 0)

	for true {
		tophat.cycle(&w, &h, 0xffffffff, cam)
		t += tophat.delta

		if input.ispressed(int('a')) {
			r.r -= 0.3 * tophat.delta
		}

		if input.ispressed(int('d')) {
			r.r += 0.3 * tophat.delta
		}

		if input.ispressed(int('w')) {
			r.l += round(0.1 * tophat.delta)
		}

		if input.ispressed(int('s')) {
			r.l -= round(0.1 * tophat.delta)
		}

		r.x, r.y = input.getglobalmousepos(cam)

		rx := r.x - cam.x + cam.w/2
		ry := r.y - cam.y + cam.h/2
		rx2, ry2 := vec.rotatepoint(rx, ry + r.l, rx, ry, r.r)

		tm.draw(cam)

		c := tophat.green
		var ix, iy: int32
		if r.gettmapcoll(tm, &ix, &iy) {
			c = tophat.red
			rawdraw.setcolor(tophat.red)
			rawdraw.drawrect(ix - cam.x + cam.w/2, iy - cam.y + cam.h/2, 4, 4)
		}
		rawdraw.drawline(round(rx), round(ry), round(rx2), round(ry2), 2, c)
	}
}

fn windowdestroy() {
	printf("destroying window\n")
}
