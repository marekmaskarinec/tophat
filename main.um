import (
	"umka/rawdraw.um"
	"umka/vec.um"
	"umka/tophat.um"
	"umka/input.um"
	"umka/rectangle.um"
	"umka/entity.um"
	"umka/raycast.um"
	"umka/polygon.um"
	"umka/ui.um"
	"umka/image.um"
	"umka/csv.um"
	"umka/tilemap.um"
	"umka/tween.um"
	"umka/light.um"
	"umka/particles.um"

	"umka/std/std.um"
)

fn main() { 
	cam := rectangle.mk(0, 0, 250, 250)
	tophat.setup("test game", 100, 100)
	var w, h: int32

	t := 0

	m := light.mk(0xff, 0.1, cam)

	spot := light.spotlight{0, 0, 20, 0xff000000}
	spot2 := light.spotlight{0, 0, 40, 0xffff0000}

	img := image.load("etc/test.png")

	for true {
		tophat.cycle(&w, &h, 0xffffffff, cam)
		t += tophat.delta

		m.clear()

		img.draw(0, 0, 0, 10)

		spot.x, spot.y = input.getglobalmousepos(cam)

		spot.stamp(&m, cam)
		spot2.stamp(&m, cam)
		m.draw(cam)

		if input.ispressed(int32('a')) {
			cam.x += round(0.1 * tophat.delta)
		}

		if input.ispressed(int32('d')) {
			cam.x -= round(0.1 * tophat.delta)
		}

		if input.ispressed(int32('w')) {
			cam.y += round(0.1 * tophat.delta)
		}

		if input.ispressed(int32('s')) {
			cam.y -= round(0.1 * tophat.delta)
		}

		if tophat.delta != 0 {
			rawdraw.drawtext(repr(1000/tophat.delta), 0, 0, tophat.white, 2)
		}
	}
}

fn windowdestroy() {
	printf("destroying window\n")
}
