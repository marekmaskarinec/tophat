import (
	"umka/rawdraw.um"
	"umka/vec.um"
	"umka/tophat.um"
	"umka/input.um"
	"umka/rectangle.um"
	"umka/entity.um"
	"umka/raycast.um"
	"umka/polygon.um"
	"umka/ui.um"
	"umka/image.um"
	"umka/csv.um"
	"umka/tilemap.um"
	"umka/tween.um"
	"umka/light.um"
	"umka/particles.um"
	"umka/lerp.um"

	"umka/std/std.um"
)

fn main() { 
	cam := rectangle.mk(20, 20, 250, 250)
	tophat.setup("test game", 100, 100)
	var w, h: int32

	t := 0

	e := entity.mk(
		polygon.mk(0, 0, []int32{0, 0, 10, 0, 10, 10, 0, 10}),
		tophat.black, 0)
	wl := lerp.lerper{lerp.item{-1, 2, 1000, 0, true}}
	hl := lerp.lerper{lerp.item{2, -1, 1000, 0, true}}

	for true {
		tophat.cycle(&w, &h, 0xffffffff, cam)
		t += tophat.delta

		/*if len(wl) == 1 {
			wl.enqueue(lerp.item{
				wl[0].end, wl[0].start,
				wl[0].length, 0})
		}

		if len(hl) == 1 {
			hl.enqueue(lerp.item{
				hl[0].end, hl[0].start,
				hl[0].length, 0})
		}*/

		e.setscale(
			wl.bydelta(tophat.delta),
			hl.bydelta(tophat.delta))
		e.draw(cam)
	}
}

fn windowdestroy() {
	printf("destroying window\n")
}
