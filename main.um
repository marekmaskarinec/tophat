import (
	"umka/rawdraw.um"
	"umka/vec.um"
	"umka/tophat.um"
	"umka/input.um"
	"umka/rectangle.um"
	"umka/entity.um"
	"umka/raycast.um"
	"umka/polygon.um"
	"umka/ui.um"
	"umka/image.um"
	"umka/csv.um"
	"umka/tilemap.um"
	"umka/tween.um"
	"umka/light.um"

	"umka/std/std.um"
)

fn main() { 
	cam := rectangle.mk(0, 0, 200, 200)
	tophat.setup("test game", 100, 100)
	var w, h: int32

	ents := make([]entity.ent, 20)

	for i, _ in ents {
		ents[i] = entity.mk(polygon.mk(std.rand()%8, std.rand()%32, []int32{0, 0, 10, 0, 10, 10, 0, 10}), std.rand()%tophat.white | 0xff, 0)
	}

	//printf("%d\n", sizeof(ents))
	//printf("%s\n", repr(ents))
	entity.ysort(&ents)
	//printf("%s\n", repr(ents))


	for true {
		tophat.cycle(&w, &h, 0xffffffff, cam)

		for _, e in ents {
			e.draw(cam)
		}
	}
}

fn windowdestroy() {
	printf("destroying window\n")
}
