import (
	"umka/anim.um"
	"umka/audio.um"
	"umka/csv.um"
	"umka/ent.um"
	"umka/font.um"
	"umka/image.um"
	"umka/input.um"
	"umka/lerp.um"
	"umka/light.um"
	"umka/misc.um"
	"umka/particles.um"
	"umka/canvas.um"
	"umka/ray.um"
	"umka/rect.um"
	"umka/th.um"
	"umka/tilemap.um"
	"umka/window.um"
	"umka/ui.um"
	"umka/vec.um"

	"umka/std/std.um"
	"umka/std/map.um"
)

fn main() { 
	cam := rect.mk(0, 0, 250, 250)
	window.setup("test game", 100, 100)
	var w, h: int32

	img := image.load("etc/test.png")
	e := ent.mk(img, th.Transform{s: th.Vf2{2, 1}, p: th.Vf2{10, 10}, o: th.Vf2{}, r: 20.0})
	e.c = th.red
	e.i.handle = 0
	//e.t.s = th.Vf2{1, 1}
	c := font.Cached{
		map.Map{}, 0, 0.1,
		font.load("examples/space-shooter/gfx/marediv-regular.ttf")}
printf("%d\n", c.font.index)

	for window.cycle(cam) {
		canvas.setColor(th.white)
		canvas.drawRect(cam)

		e.t.p = input.getGlobalMousePos(cam)
		e.draw(cam)

		if th.delta == 0 {
			th.delta = 16
		}

		c.draw("a B q\na B q", th.Transform{p: th.Vf2{20, 20}, s: th.Vf2{0.03, 0.03}})		
		canvas.drawLine(th.Vf2{20, 20}, th.Vf2{21, 20}, 1, th.cyan)
		canvas.drawText(repr(1000/th.delta), th.Vf2{0, 0}, th.black, 1)
	}
}

fn windowdestroy() {
	printf("destroying window\n")
}
